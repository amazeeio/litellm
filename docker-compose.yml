services:
  litellm:
    build:
      context: .
      args:
        target: runtime
    image: ghcr.io/berriai/litellm:main-stable
    volumes:
     - ./config.yaml:/app/config.yaml # <<- this is missing in the docker-compose file currently
    command:
     - "--config=/app/config.yaml"
    ports:
      - "4000:4000" # Map the container port to the host, change the host port if necessary
    environment:
        DATABASE_URL: "postgresql://llmproxy:dbpassword9090@litellm_db:5432/litellm"
        STORE_MODEL_IN_DB: "True" # allows adding models to proxy via UI
        LITELLM_MASTER_KEY: "sk-1234"
        OPENMETER_API_ENDPOINT: "http://openmeter:8888"
        OPENMETER_API_KEY: "sk-test"
        OTEL_EXPORTER: "otlp_grpc"
        OTEL_ENDPOINT: "http://otel-collector:4317"
        OLLAMA_BASE_URL: "http://ollama:11434"
    env_file:
      - .env # Load local .env file
    healthcheck:  # Defines the health check configuration for the container
      test: [ "CMD", "curl", "-f", "http://localhost:4000/health/liveliness || exit 1" ]  # Command to execute for health check
      interval: 30s  # Perform health check every 30 seconds
      timeout: 10s   # Health check command times out after 10 seconds
      retries: 3     # Retry up to 3 times if health check fails
      start_period: 40s  # Wait 40 seconds after container start before beginning health checks
    networks:
      - amazeeai

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    restart: always
    networks:
      - amazeeai

volumes:
  prometheus_data:
    driver: local
  postgres_data:
    name: litellm_postgres_data  # Named volume for Postgres data persistence

networks:
  amazeeai:
    external: true

# ...rest of your docker-compose config if any
